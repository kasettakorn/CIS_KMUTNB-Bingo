{"version":3,"sources":["image/red-1618916_1280.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","handleClick","value","boardClickStatus","state","newState","_","cloneDeep","setState","fill","Array","bind","this","updateArray","className","onClick","src","circle","alt","disabled","style","cursor","backgroundColor","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a23e1b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red-1618916_1280.8bd8d52f.png\";","import React, { Component } from 'react';\nimport './styles/App.css';\nimport _ from 'lodash';\nimport circle from './image/red-1618916_1280.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardClickStatus: _.fill(Array(25), false)\n    }\n    this.state.boardClickStatus[12] = true\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n  updateArray() {\n    this.props.updateArray(this.state)\n  }\n  handleClick = value => {\n    const { boardClickStatus } = this.state;\n    const newState = _.cloneDeep(boardClickStatus);\n    newState[value] = !newState[value];\n    this.setState({\n      boardClickStatus: newState\n    })\n\n\n\n  }\n\n\n  render() {\n    const { boardClickStatus } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1 className=\"heading\">CIS KMUTNB BINGO</h1>\n          <div className=\"bingoBoard\">\n            <table>\n              <tbody>\n                <tr>\n                  <td onClick={() => this.handleClick(0)}>\n                    {boardClickStatus[0] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>ผ่านอัลกอในครั้งเดียว</button></td>\n                  <td onClick={() => this.handleClick(1)}>\n                    {boardClickStatus[1] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เรียน Discrete Math กับ อ.สุรชาติ</button></td>\n                  <td onClick={()=>this.handleClick(2)}>\n                    {boardClickStatus[2] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>Compro 1 ทำเกม Bingo</button></td>\n                  <td onClick={()=>this.handleClick(3)}>\n                    {boardClickStatus[3] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เรียน SA กับ TVC</button></td>\n                  <td onClick={()=>this.handleClick(4)}>\n                    {boardClickStatus[4] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยได้ A วิชาภาค</button></td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td onClick={()=>this.handleClick(5)}>\n                    {boardClickStatus[5] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>One Night miracle วิชาภาค</button></td>\n                  <td onClick={()=>this.handleClick(6)}>\n                    {boardClickStatus[6] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยโดน อ. พูดคำว่า \"อ่อน\" ใส่หน้า</button></td>\n                  <td onClick={()=>this.handleClick(7)}>\n                    {boardClickStatus[7] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>แอบก๊อปโค้ดตอน Quiz</button></td>\n                  <td onClick={()=>this.handleClick(8)}>\n                    {boardClickStatus[8] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เข้าเรียน Compro 1 ของ AWS สาย</button></td>\n                  <td onClick={()=>this.handleClick(9)}>\n                    {boardClickStatus[9] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เรียนกับ อ. ครบ 3 เทพ</button></td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td onClick={()=>this.handleClick(10)}>\n                    {boardClickStatus[10] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เป็น Staff งานรับน้อง</button></td>\n                  <td onClick={()=>this.handleClick(11)}>\n                    {boardClickStatus[11] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยบนกับศาลยีราฟ</button></td>\n                  <td><button disabled style={{ cursor: \"default\", backgroundColor: \"whitesmoke\" }}>FREE</button></td>\n                  <td onClick={()=>this.handleClick(13)}>\n                    {boardClickStatus[13] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยเจอเต่าในมหาลัย</button></td>\n                  <td onClick={()=>this.handleClick(14)}>\n                    {boardClickStatus[14] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>ร่วมงาน 3K</button></td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td onClick={()=>this.handleClick(15)}>\n                    {boardClickStatus[15] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยแข่งกีฬา<br />วิทยาฯ</button></td>\n                  <td onClick={()=>this.handleClick(16)}>\n                    {boardClickStatus[16] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยเป็นสแตนด์</button></td>\n                  <td onClick={()=>this.handleClick(17)}>\n                    {boardClickStatus[17] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>พี่รหัสพาไปเลี้ยงสาย</button></td>\n                  <td onClick={()=>this.handleClick(18)}>\n                    {boardClickStatus[18] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยเป็นพี่เนียนงานรับน้อง</button></td>\n                  <td onClick={()=>this.handleClick(19)}>\n                    {boardClickStatus[19] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เปิด-ปิดประตูห้องเรียนผิดด้าน</button></td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td onClick={()=>this.handleClick(20)}>\n                    {boardClickStatus[20] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยหลับวิชา SE</button></td>\n                  <td onClick={()=>this.handleClick(21)}>\n                    {boardClickStatus[21] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยเซ็นยอมแพ้โปรเจค OOP</button></td>\n                  <td onClick={()=>this.handleClick(22)}>\n                    {boardClickStatus[22] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยสอบมิดเทอมได้ 0 คะแนน</button></td>\n                  <td onClick={()=>this.handleClick(23)}>\n                    {boardClickStatus[23] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>แบกคอมไปเล่นวิชา Physics</button></td>\n                  <td onClick={()=>this.handleClick(24)}>\n                    {boardClickStatus[24] && <img className=\"circle\" src={circle} alt=\"circle\" />}\n                    <button>เคยกลัวพี่เพลง</button></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}